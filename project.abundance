{
    "atomType": "Molecule",
    "name": "Sphere",
    "x": 0,
    "y": 0,
    "uniqueID": 1731526624936,
    "ioValues": [],
    "description": "Molecules provide an organizational structure to contain atoms. Double click on a molecule to enter it. Use the up arrow in the upper right hand corner of the screen to go up one level.",
    "topLevel": true,
    "allAtoms": [
        {
            "atomType": "Output",
            "name": "Output",
            "x": 0.98,
            "y": 0.5,
            "uniqueID": 1731526650281,
            "ioValues": [
                {
                    "name": "number or geometry",
                    "ioValue": 1731526722087
                }
            ],
            "description": "Connect geometry here to make it available in the next level up. "
        },
        {
            "atomType": "Code",
            "name": "Code",
            "x": 0.3444244604316547,
            "y": 0.5125348189415042,
            "uniqueID": 1731526654489,
            "ioValues": [
                {
                    "name": "input1",
                    "ioValue": 10
                },
                {
                    "name": "height",
                    "ioValue": 10
                }
            ],
            "description": "Defines a Replicad code block.",
            "codeVersion": 1,
            "code": "\nimport { makeSphere } from 'replicad';\n//Inputs:[input1, height];\n\n\nconst radius = 10; // Specify the radius of the sphere\n\nconst sphere = makeSphere(radius);\n\n return { geometry: [sphere], tags: [],\n      color: '#A3CE5B',\n      plane: newPlane}\n\n\n    /**\n    To Use the Code Atom, enter your inputs to the input list a.e Inputs:[shape, height]\n    If your input is connected to another atom with a replicad geometry you can access its geometry by looking up its ID in your library. a.e library[Input1].geometry[0] \n    Use any replicad available methods to modify your geometry. Learn more about all of the available methods at \n    https://replicad.xyz/docs/introapp/UserGuide.html \n    Return a replicad object that includes geometry, color, tags and plane. \n\n\n    Example Code Atom:\n\n      Inputs:[shape, x];\n\n      let finalShape = library[shape].geometry[0].clone.translate[x,0,0]\n\n      return {geometry: finalShape, color: library[shape].color, plane: library[shape].plane, tags: library[shape].tags }\n\n      - See more examples at _______ \n\n\n    */\n"
        },
        {
            "atomType": "Circle",
            "name": "Circle",
            "x": 0.5944244604316546,
            "y": 0.5515320334261838,
            "uniqueID": 1731526722087,
            "ioValues": [
                {
                    "name": "diameter",
                    "ioValue": 10
                }
            ],
            "description": "Creates a new circle."
        }
    ],
    "allConnectors": [
        {
            "ap1Name": "geometry",
            "ap2Name": "number or geometry",
            "ap2Primary": false,
            "ap1ID": 1731526722087,
            "ap2ID": 1731526650281
        }
    ],
    "unitsKey": "MM",
    "fileTypeVersion": 1,
    "compiledBom": [],
    "filetypeVersion": 1
}